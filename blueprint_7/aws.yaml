tosca_definitions_version: cloudify_dsl_1_3

description: >
  This blueprint creates an AWS infrastructure environment.

imports:
  - https://cloudify.co/spec/cloudify/6.2.0/types.yaml
  - plugin:cloudify-aws-plugin
  - plugin:cloudify-utilities-plugin

inputs:

  aws_region_name:
    type: string
    default: 'us-east-1'
    constraints:
      - valid_values:
        - us-east-1
        - us-east-2
        - us-west-1
        - us-west-2
        - eu-central-1
        - eu-west-1
        - eu-west-2
        - eu-south-1
        - eu-west-3
        - eu-north-1
        - af-south-1
        - ap-east-1
        - ap-south-1
        - ap-northeast-3
        - ap-northeast-2
        - ap-southeast-1
        - ap-southeast-2
        - ap-northeast-1
        - ca-central-1
        - cn-north-1
        - cn-northwest-1
        - me-south-1
        - sa-east-1

  instance_type:
    type: string
    default: t2.micro
    constraints:
      - valid_values:
        - t2.micro
        - t2.small
        - t2.medium
        - t2.large
        - t2.xlarge
        - t2.2xlarge

  agent_user:
    description: >
      The username of the agent running on the instance created from the image.
    default: 'centos'

  agent_key_name:
    type: string
    default: agent_key

  env_name:
    type: string
    description: Control parameters for names in resources.
    default: 'example'

dsl_definitions:

  client_config: &client_config
    aws_access_key_id: { get_secret: aws_access_key_id }
    aws_secret_access_key: { get_secret: aws_secret_access_key }
    region_name: { get_input: aws_region_name }

node_templates:

  security_group:
    type: cloudify.nodes.aws.ec2.SecurityGroup
    properties:
      client_config: *client_config
      resource_config:
        GroupName: CloudifyGettingStartedExample
        Description: Created by cloudify-getting-started-example.
        VpcId: { get_attribute: [ vpc, aws_resource_id ] }
    relationships:
    - type: cloudify.relationships.depends_on
      target: vpc

  routetable:
    type: cloudify.nodes.aws.ec2.RouteTable
    properties:
      client_config: *client_config
    relationships:
    - type: cloudify.relationships.contained_in
      target: vpc
    - type: cloudify.relationships.connected_to
      target: subnet

  subnet:
    type: cloudify.nodes.aws.ec2.Subnet
    properties:
      client_config: *client_config
      resource_config:
        CidrBlock: 10.10.4.0/24
        AvailabilityZone: { concat: [ { get_input: aws_region_name }, 'b' ] }
    relationships:
    - type: cloudify.relationships.depends_on
      target: vpc

  internet_gateway:
    type: cloudify.nodes.aws.ec2.InternetGateway
    properties:
      client_config: *client_config
    relationships:
    - type: cloudify.relationships.connected_to
      target: vpc

  vpc:
    type: cloudify.nodes.aws.ec2.Vpc
    properties:
      client_config: *client_config
      resource_config:
        CidrBlock: 10.10.0.0/16
